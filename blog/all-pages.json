[{"type":"Page","content":[{"allAtOnce":true,"type":"Meta"},{"title":"Tests Are Here To Speed You Up","id":"tests-are-here-to-speed-you-up","type":"Section","content":[{"type":"Paragraph","content":[{"type":"Emphasis","content":[{"text":"\"I am not writing tests right now as they are going to slow me down\"","type":"SimpleText"}]},{"text":" is one of the most common excuses I heard in","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"the projects I worked on.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"A lack of test writing experience can make you feel this way, but I think there is another,","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"bigger reason for the perception that tests slow you down. I believe this reason is actually an untapped superpower:","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"the power of exercising any piece of your software in ","type":"SimpleText"},{"code":"O(1)","type":"InlinedCode"},{"text":" keystrokes. By ","type":"SimpleText"},{"code":"O(1)","type":"InlinedCode"},{"text":" I mean that regardless of how big","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"your application becomes you will always be one button away of seeing the impact of your changes.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"The superpower of having the tightest feedback loop.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Let me try to explain.","type":"SimpleText"}]}]},{"title":"Building A Medieval Castle","id":"building-a-medieval-castle","type":"Section","content":[{"type":"Paragraph","content":[{"text":"We are going to build a Castle, add features to it, and do a manual inspection of our creation as we go.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Let's start small. All we need is a single room and a throne to sit on.","type":"SimpleText"}]},{"svgSrc":"/blog/assets/castle.svg?timestamp=1576557518000","idsToReveal":["one"],"actualSize":true,"type":"Svg"},{"type":"Paragraph","content":[{"text":"Perfect! So let's test it. Quickly get in, walk through the room, sit on the throne. All is good.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Let's add a few more rooms and a chest.","type":"SimpleText"}]},{"svgSrc":"/blog/assets/castle.svg?timestamp=1576557518000","idsToReveal":["one","two"],"actualSize":true,"type":"Svg"},{"type":"Paragraph","content":[{"text":"Our goal is to test if we can open that chest. This time we have to do a little bit more legwork.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"This time, a simple check took us a few minutes longer.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Let's add a bit of security to our castle by adding keys and levers.","type":"SimpleText"}]},{"svgSrc":"/blog/assets/castle.svg?timestamp=1576557518000","idsToReveal":["one","two","three"],"actualSize":true,"type":"Svg"},{"type":"Paragraph","content":[{"text":"We have to test each door and to do that we need to go through our entire castle.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"This makes a good test and a very important one.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"For our next iteration we decided to add a new smart lock to our chest, so we can open it","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"with our retina.","type":"SimpleText"}]},{"svgSrc":"/blog/assets/castle.svg?timestamp=1576557518000","idsToReveal":["one","two","three","smartLock"],"actualSize":true,"type":"Svg"},{"type":"Paragraph","content":[{"text":"We gotta test this feature. So we open a jar, to pick a key, to open first one door and then to open the other door, to pull the lever,","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to run the stairs through the opened door. After catching our breath we try to open a chest.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"A day later, we decide to add an auto lock after three failed attempt.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"And so we bring a friend who is not registered with our castle to open a jar, to pick a key,","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to open a door, ... to ..., ..., to try to fail to open a chest.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"A few iterations later the Security Department expressed the concern that our security could use an upgrade.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"A trap, puzzle and a dragon later we are ready to deploy.","type":"SimpleText"}]},{"svgSrc":"/blog/assets/castle.svg?timestamp=1576557518000","idsToReveal":["one","two","three","smartLock","four","scissors"],"actualSize":true,"type":"Svg"},{"type":"Paragraph","content":[{"text":"As before, we gotta test every new added Security feature. This is a good test and a very important one.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"We get caught in a trap, we jump over the trap, we play rock/paper/scissors to lose and to win, open the door,","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"get eaten by the dragon, defeat the dragon and finally reach the chest. All tests passed.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Another development iteration passes and we decided to make ","type":"SimpleText"},{"type":"Emphasis","content":[{"text":"scissors","type":"SimpleText"}]},{"text":" game to be lefty friendly.","type":"SimpleText"}]},{"svgSrc":"/blog/assets/castle.svg?timestamp=1576557518000","idsToReveal":["one","two","three","smartLock","four","scissorsLeft"],"actualSize":true,"type":"Svg"},{"type":"Paragraph","content":[{"text":"And so we bring a friend who is a lefty, can jump over traps, to open a jar, to pick a key, to open a door, to jump over trap,","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"to open a door, to play rock/paper/scissors","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"A day later we decided to add a fingerprint reader to our chest","type":"SimpleText"}]},{"svgSrc":"/blog/assets/castle.svg?timestamp=1576557518000","idsToReveal":["one","two","three","smartLock","smartLock","smartLockThumbs","four","scissorsLeft"],"actualSize":true,"type":"Svg"},{"type":"Paragraph","content":[{"text":"And so we bring another friend who is a lefty, who is not registered with our castle, who can jump over traps,","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"who won't be scared of a dragon, to open a jar, to pick a key, to open a door, to jump over trap, to open a door, to","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"play rock/paper/scissors, to open a lever, to challenge a dragon, to put a finger to a chest.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"It should be clear by now that the more features we add to the castle, the more time it takes to do a check routine of a single feature.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"What is interesting is that the big portion of the time is spend getting to the feature we want to test and not the test itself.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Having said all that let's add another floor to the castle.","type":"SimpleText"}]},{"svgSrc":"/blog/assets/castle.svg?timestamp=1576557518000","idsToReveal":["one","two","three","smartLock","smartLock","smartLockThumbs","four","scissorsLeft","five","cardGameTwo"],"actualSize":true,"type":"Svg"},{"type":"Paragraph","content":[{"text":"There is a new room where you can grab any gear you want and also play a ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"loot box","type":"SimpleText"}]},{"text":" game.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Don't worry we won't be running through the castle to test ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"loot box","type":"SimpleText"}]},{"text":" game algorithm (one entire castle run for a single try)","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Instead, we will create ","type":"SimpleText"},{"type":"StrongEmphasis","content":[{"text":"teleports","type":"SimpleText"}]}]}]},{"title":"Teleports System","id":"teleports-system","type":"Section","content":[{"type":"Paragraph","content":[{"text":"Instead of running around the castle, fighting dragons and jumping over traps, wouldn't it be easier to just appear","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"in certain castle places to perform our routines?","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Let's add a ","type":"SimpleText"},{"code":"teleport","type":"InlinedCode"},{"text":" right next to our new loot box game.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Next time we tweak loot algorithm we won't run around the castle, we just show up right where we need to be.","type":"SimpleText"}]},{"svgSrc":"/blog/assets/castle.svg?timestamp=1576557518000","idsToReveal":["t3","one","two","three","smartLock","smartLock","smartLockThumbs","four","scissorsLeft","five","cardGameOne"],"actualSize":true,"type":"Svg"},{"type":"Paragraph","content":[{"text":"Regardless of how big our castle will become, regardless of how many more traps and doors we will add between the castle entrance and","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"the loot floor, when we need to tweak and test our loot box algorithm, we just show up right there.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Let's add ","type":"SimpleText"},{"code":"teleports","type":"InlinedCode"},{"text":" next to more points of interests, so next time when we tweak our features we can test them in an instance.","type":"SimpleText"}]},{"svgSrc":"/blog/assets/castle.svg?timestamp=1576557518000","idsToReveal":["t1","t2","t3","one","two","three","smartLock","smartLock","smartLockThumbs","four","scissorsLeft","five","cardGameOne"],"actualSize":true,"type":"Svg"},{"type":"Paragraph","content":[{"text":"On our first day we only had one room and a throne at the end.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"But if on the same day we would add a teleport next to the throne - we would already be saving time running through the room.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Teleporting would make us faster day one.","type":"SimpleText"}]}]},{"title":"Implementing Teleports","id":"implementing-teleports","type":"Section","content":[{"type":"Paragraph","content":[{"text":"The castle we have built is your app. And the main entrance is your language ","type":"SimpleText"},{"code":"main","type":"InlinedCode"},{"text":" function.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"One way to build teleports is to implement more than one ","type":"SimpleText"},{"code":"main","type":"InlinedCode"},{"text":" file with its own ","type":"SimpleText"},{"code":"main","type":"InlinedCode"},{"text":" function.","type":"SimpleText"}]},{"lang":"java","snippet":"class ChestTeleport {\n    public static void main() {\n        FingerAuth wrongAuth = new FingerAuth('wrongPerson');\n        SmartLockChest chest = new Chest();\n        assert !chest.open(wrongAuth);\n\n        FingerAuth validAuth = new FingerAuth('validPerson');\n        SmartLockChest chest = new Chest();\n        assert chest.open(validAuth));\n    }\n}\n","lineNumber":"","title":"Java example of Chest Teleport","type":"Snippet"},{"type":"Paragraph","content":[{"text":"If you do just that it is already going to be a time saver. Any time you want to test a different portion of your castle, you just use a","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"different teleport - a different file to execute.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"As the number of teleports grow it may become harder to sort through them to pick one to use.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Also teleports that are rarely used may become obsolete and point you to non existing parts of your castle.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Fortunately most languages have a testing framework to define and structure your teleports. Moreover they will make sure","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"that teleports are still functioning.","type":"SimpleText"}]},{"lang":"java","snippet":"class ChestTest {\n    @Test\n    public void invalidFingerAuth() {\n        FingerAuth wrongAuth = new FingerAuth('wrongPerson');\n        SmartLockChest chest = new Chest();\n        Assert.assertFalse(chest.open(auth));\n    }\n\n    @Test\n    public void validFingerAuth() {\n        FingerAuth validAuth = new FingerAuth('validPerson');\n        SmartLockChest chest = new Chest();\n        Assert.assertTrue(chest.open(auth));\n    }\n}\n","lineNumber":"","title":"Java example of Chest Test","type":"Snippet"},{"type":"Paragraph","content":[{"text":"This is the untapped power of tests I was talking about at the beginning - the power to exercise any piece of your software in one button press.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Regardless of how large or small you software is, tweaking your castle and validating it in a matters of seconds using","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"an ever growing system of teleports will make you consistently productive on day one, day two, day hundred and day thousand.","type":"SimpleText"}]}]},{"title":"Real Life Boring Example","id":"real-life-boring-example","type":"Section","content":[{"type":"Paragraph","content":[{"text":"You probably don't face castles and dragons every day at your work, so let me map it to a boring real life example.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Let's add a page to Enterprise Corporate Website. Page will list employees that have birthdays today. List must be in an alphabetic order.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Your fire up your IDE, write new page, deploy to DEV environment and test it. All looks good.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"A minute later you realize that your company doesn't have employees with the same last name that have birthdays on the same day.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"So how do you test this scenario?","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"You create a SysAdmin Ticket to request ","type":"SimpleText"},{"code":"WRITE","type":"InlinedCode"},{"text":" access to ","type":"SimpleText"},{"code":"DEV","type":"InlinedCode"},{"text":" database. Wait for approval. Restart the server and check your code.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Note: You may say, but hey, I can run my database locally! Sure, but not every big company and not every software has moved on to the greatest tech.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"And most excuses for not writing tests come from Enterprise engineers working on legacy applications. Plus it helps to make a point.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Your code is in production for a month. Everyone is happy, the page is a great success and have many daily visitors.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Hence a new request comes up: you need to change the sorting works.","type":"SimpleText"}]},{"columns":[{"content":[{"lang":"text","snippet":"Smith Bo\nSmith Bob\nSmith Bobed\nSmith Al\nSmith Alice\n","lineNumber":"","title":"instead of","type":"Snippet"}]},{"content":[{"lang":"text","snippet":"Smith Alice\nSmith Al\nSmith Bobed\nSmith Bob\nSmith Bo\n","lineNumber":"","title":"expected","type":"Snippet"}]}],"config":{},"type":"Columns"},{"type":"Paragraph","content":[{"text":"Basically, still sort alphabetically, but put longer names at the top. It makes page looks better!","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"You fire up your ","type":"SimpleText"},{"code":"DEV","type":"InlinedCode"},{"text":" to realize the data is gone. You create a SysAdmin Ticket to request ","type":"SimpleText"},{"code":"WRITE","type":"InlinedCode"},{"text":" access to ","type":"SimpleText"},{"code":"DEV","type":"InlinedCode"},{"text":" database.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"Wait for approval. Restart the server and start coding.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"Let's rewind and try again. Instead of jumping to deploy and database manipulations, let's build a teleport.","type":"SimpleText"}]},{"lang":"java","snippet":"class EmployeesSorterTest {\n    @Test\n    public void matchingLastName() {\n        EmployeesList list = new EmployeesList();\n        list.add(\"Smith\", \"Bobed\");\n        list.add(\"Smith\", \"Alice\");\n        list.add(\"Smith\", \"Al\");\n        list.add(\"Smith\", \"Bob\");\n\n        EmployeesSorter employeesSorter = new EmployeesSorter();\n        EmployeesList sorted = employeesSorter.sort(list);\n        \n        Assert.assertEqual(\"Alice\", sorted.get(0).getFirstName());\n        Assert.assertEqual(\"Al\", sorted.get(1).getFirstName());\n        Assert.assertEqual(\"Bobed\", sorted.get(2).getFirstName());\n        Assert.assertEqual(\"Bob\", sorted.get(3).getFirstName());\n    }\n}\n","lineNumber":"","title":"Employees Sort Teleport","type":"Snippet"},{"type":"Paragraph","content":[{"text":"Whether you implement ","type":"SimpleText"},{"code":"EmployeesSorterTest","type":"InlinedCode"},{"text":" first or ","type":"SimpleText"},{"code":"EmployeesSorter","type":"InlinedCode"},{"text":" is not that important to me.","type":"SimpleText"}]},{"type":"Paragraph","content":[{"text":"What important is you have a very tight feedback loop between your changes and the result.","type":"SimpleText"},{"type":"SoftLineBreak"},{"text":"You bypass database admins (ahem, dragon, ahem, JK), web pages, internal auth systems and get straight to the business logic at hand.","type":"SimpleText"}]}]},{"title":"Summary","id":"summary","type":"Section","content":[{"bulletMarker":"*","tight":true,"type":"BulletList","content":[{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Having a tight feedback loop is important for being efficient engineer.","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Tests are your teleports into any part of your application.","type":"SimpleText"}]}]},{"type":"ListItem","content":[{"type":"Paragraph","content":[{"text":"Tests make you fast.","type":"SimpleText"}]}]}]}]}],"lastModifiedTime":1578441844000,"tocItem":{"sectionTitle":"Entry","pageTitle":"Testing Makes You Faster Day One","pageMeta":{"date":["2019-12-19"],"summary":["How testing makes you fast day one and not in some unknown future"]},"dirName":"entry","fileName":"testing-makes-you-faster-day-one","viewOnRelativePath":"articles/testing-makes-you-faster-day-one.md","pageSectionIdTitles":[{"title":"Tests Are Here To Speed You Up","id":"tests-are-here-to-speed-you-up"},{"title":"Building A Medieval Castle","id":"building-a-medieval-castle"},{"title":"Teleports System","id":"teleports-system"},{"title":"Implementing Teleports","id":"implementing-teleports"},{"title":"Real Life Boring Example","id":"real-life-boring-example"},{"title":"Summary","id":"summary"}]}},{"type":"Page","content":[{"tocItems":[{"sectionTitle":"Entry","pageTitle":"Testing Makes You Faster Day One","pageMeta":{"date":["2019-12-19"],"summary":["How testing makes you fast day one and not in some unknown future"]},"dirName":"entry","fileName":"testing-makes-you-faster-day-one","viewOnRelativePath":"articles/testing-makes-you-faster-day-one.md","pageSectionIdTitles":[]}],"type":"ListOfBlogEntries"}],"lastModifiedTime":1574730915000,"tocItem":{"sectionTitle":"","pageTitle":"Index","pageMeta":{},"dirName":"","fileName":"index","viewOnRelativePath":null,"pageSectionIdTitles":[]}}]